#!/usr/bin/env php
<?php declare(strict_types=1);

require_once dirname(__DIR__) . '/vendor/autoload.php';

use WorkBunny\EventLoop\Drivers\EventLoop;
use WorkBunny\EventLoop\Drivers\NativeLoop;
use WorkBunny\EventLoop\Drivers\EvLoop;
use WorkBunny\EventLoop\Drivers\SwowLoop;
use WorkBunny\EventLoop\Loop;

// PHP Wile
$count = 0;
$start = microtime(true);
while (true){
    $count ++;
    if($start + 1 <= microtime(true)){
        dump('PHP-While 1s loop-counts: ' . $count);
        break;
    }
}

// NativeLoop
$loop = Loop::create(NativeLoop::class);
$count = 0;
$start = microtime(true);
$loop->addTimer(0.0, 0.0, function () use (&$count, $start, $loop){
    $count ++;
    if($start + 1 >= microtime(true)){
        return;
    }
    dump(get_class($loop) . ' 1s loop-counts: ' . $count);
    $loop->destroy();
});
$loop->loop();
Loop::remove();

// EventLoop
$loop = Loop::create(EventLoop::class);
$count = 0;
$start = microtime(true);
$loop->addTimer(0.0, 0.0, function () use (&$count, $start, $loop){
    $count ++;
    if($start + 1 >= microtime(true)){
        return;
    }
    dump(get_class($loop) . ' 1s loop-counts: ' . $count);
    $loop->destroy();
});
$loop->loop();
Loop::remove();

// EvLoop
$loop = Loop::create(EvLoop::class);
$count = 0;
$start = microtime(true);
$loop->addTimer(0.0, 0.00001, function () use (&$count, $start, $loop){
    $count ++;
    if($start + 1 >= microtime(true)){
        return;
    }
    dump(get_class($loop) . ' 1s loop-counts: ' . $count);
    $loop->destroy();
});
$loop->loop();
Loop::remove();

// SwowLoop
$loop = Loop::create(SwowLoop::class);
$count = 0;
$start = microtime(true);
$loop->addTimer(0.0, 0.0, function () use (&$count, $start, $loop){
    $count ++;
    if($start + 1 >= microtime(true)){
        return;
    }
    dump(get_class($loop) . ' 1s loop-counts: ' . $count);
    $loop->destroy();
});
$loop->loop();
Loop::remove();